"use strict";(self.webpackChunkio_github_lyrihkaesa=self.webpackChunkio_github_lyrihkaesa||[]).push([["8130"],{33982:function(e,n,i){i.r(n),i.d(n,{default:()=>h,frontMatter:()=>l,metadata:()=>a,assets:()=>o,toc:()=>t,contentTitle:()=>d});var a=JSON.parse('{"id":"spatie-laravel-permission","title":"Spatie/laravel-permission","description":"Daftar istilah:","source":"@site/articles/laravel/05-spatie-laravel-permission.md","sourceDirName":".","slug":"/spatie-laravel-permission","permalink":"/laravel/spatie-laravel-permission","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Livewire v3","permalink":"/laravel/livewire-v3"},"next":{"title":"Tinker","permalink":"/laravel/tinker"}}'),s=i("85893"),r=i("50065");let l={},d="Spatie/laravel-permission",o={},t=[{value:"Introduction (Pendahuluan)",id:"introduction-pendahuluan",level:2},{value:"Prerequisites (Persyaratan)",id:"prerequisites-persyaratan",level:2},{value:"Laravel Version",id:"laravel-version",level:3},{value:"User Model / Contract / Interface",id:"user-model--contract--interface",level:3},{value:"TIDAK BOLEH memiliki property <code>role</code> atau <code>roles</code>, maupun method <code>roles()</code>",id:"tidak-boleh-memiliki-property-role-atau-roles-maupun-method-roles",level:3},{value:"TIDAK BOLEH memiliki property <code>permission</code> atau <code>permissions</code>, maupun method <code>permission()</code>",id:"tidak-boleh-memiliki-property-permission-atau-permissions-maupun-method-permission",level:3},{value:"Config file",id:"config-file",level:3},{value:"Schema Limitation in MySQL",id:"schema-limitation-in-mysql",level:3},{value:"Catatan untuk aplikasi yang menggunakan UUID/ULID/GUID",id:"catatan-untuk-aplikasi-yang-menggunakan-uuidulidguid",level:3},{value:"Database foreign-key relationship support",id:"database-foreign-key-relationship-support",level:3},{value:"Installation in Laravel",id:"installation-in-laravel",level:2},{value:"Laravel Version Compatibility",id:"laravel-version-compatibility",level:3},{value:"Installing",id:"installing",level:3},{value:"Default config file contents",id:"default-config-file-contents",level:3},{value:"Membuat Seeder",id:"membuat-seeder",level:3},{value:"Basic Usage (Penggunaan Dasar)",id:"basic-usage-penggunaan-dasar",level:2},{value:"Add The Trait",id:"add-the-trait",level:3},{value:"Create A Permission",id:"create-a-permission",level:3},{value:"Assign A Permission To A Role",id:"assign-a-permission-to-a-role",level:3},{value:"Sync Permissions To A Role",id:"sync-permissions-to-a-role",level:3},{value:"Remove Permission From A Role",id:"remove-permission-from-a-role",level:3},{value:"Guard Name",id:"guard-name",level:2},{value:"Get Permissions For A User",id:"get-permissions-for-a-user",level:3},{value:"Scopes",id:"scopes",level:3},{value:"Eloquent Calls",id:"eloquent-calls",level:3},{value:"Counting Users Having A Role",id:"counting-users-having-a-role",level:3},{value:"Best-Practice",id:"best-practice",level:2},{value:"Roles vs Permissions",id:"roles-vs-permissions",level:3},{value:"Membuat Policy Role dan Permission",id:"membuat-policy-role-dan-permission",level:2},{value:"Role",id:"role",level:3},{value:"Permission",id:"permission",level:2},{value:"AuthServiceProvider",id:"authserviceprovider",level:3}];function c(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"spatielaravel-permission",children:"Spatie/laravel-permission"})}),"\n",(0,s.jsx)(n.p,{children:"Daftar istilah:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"roles = peranan"}),"\n",(0,s.jsx)(n.li,{children:"permission = perizinan"}),"\n",(0,s.jsx)(n.li,{children:"user = pengguna"}),"\n",(0,s.jsx)(n.li,{children:"policies/policy = kebijakan"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"introduction-pendahuluan",children:"Introduction (Pendahuluan)"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Package"})," ini mengizinkan Anda untuk memanajemen user permissions dan roles di database."]}),"\n",(0,s.jsx)(n.p,{children:"Setelah terinstal, Anda dapat melakukan hal-hal seperti ini:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// Menambahkan permissions ke user\r\n$user->givePermissionTo('edit articles');\r\n\r\n// Menambahkan permissions menggunakan roles\r\n$user->assignRole('writer');\r\n\r\n$roleWriter->givePermissionTo('edit articles');\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Jika Anda menggunakan ",(0,s.jsx)(n.code,{children:"multiple guards"})," dalam Laravel, Spatie Permission dapat menangani kasus tersebut dengan baik. Setiap guard akan memiliki seperangkat permissions dan roles sendiri.\r\nBaca lebih lanjut tentang ini pada section [using multiple guards]."]}),"\n",(0,s.jsxs)(n.p,{children:["Karena semua permissions akan terdaftar pada ",(0,s.jsx)(n.em,{children:"gate"})," (pintu gerbang) Laravel, Anda dapat memeriksa apakah seseorang user memiliki permissions dengan menggunakan ",(0,s.jsx)(n.em,{children:"default function"})," ",(0,s.jsx)(n.code,{children:"can"})," pada Laravel:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$user->can('edit articles');\n"})}),"\n",(0,s.jsxs)(n.p,{children:["dan menggunakan ",(0,s.jsx)(n.em,{children:"directive Blade"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"@can('edit articles')\r\n// Konten yang hanya ditampilkan jika _user_ memiliki `permissions` untuk mengedit artikel\r\n// ...\r\n@endcan\n"})}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites-persyaratan",children:"Prerequisites (Persyaratan)"}),"\n",(0,s.jsx)(n.h3,{id:"laravel-version",children:"Laravel Version"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Package"}),' ini dapat digunakan dengan Laravel versi 6 atau yang lebih tinggi. Anda dapat memeriksa halaman "[Installing on Laravel]" untuk mengetahui versi ',(0,s.jsx)(n.em,{children:"Package"})," yang kompatibel dengan berbagai versi Laravel. Dengan demikian, Anda dapat memastikan bahwa Anda menggunakan versi ",(0,s.jsx)(n.em,{children:"Package"})," yang sesuai dengan versi Laravel yang Anda gunakan."]}),"\n",(0,s.jsx)(n.h3,{id:"user-model--contract--interface",children:"User Model / Contract / Interface"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Package"})," ini menggunakan lapisan ",(0,s.jsx)(n.code,{children:"Gate Laravel"})," untuk menyediakan kemampuan ",(0,s.jsx)(n.em,{children:"Authorization"})," (otorisasi). Lapisan ",(0,s.jsx)(n.em,{children:"Gate/authorization"})," memerlukan model ",(0,s.jsx)(n.code,{children:"User"})," Anda untuk implement contract ",(0,s.jsx)(n.code,{children:"Illuminate\\Contracts\\Auth\\Access\\Authorizable"}),". Jika tidak, method ",(0,s.jsx)(n.code,{children:"can()"})," dan ",(0,s.jsx)(n.code,{children:"authorize()"})," tidak akan berfungsi dalam ",(0,s.jsx)(n.em,{children:"controllers, policies, templates,"})," dll."]}),"\n",(0,s.jsxs)(n.p,{children:["Dalam instruksi [Instalasi], Anda akan melihat bahwa trait ",(0,s.jsx)(n.code,{children:"HasRoles"})," harus ditambahkan ke model ",(0,s.jsx)(n.code,{children:"User"})," untuk ",(0,s.jsx)(n.em,{children:"enable"})," (mengaktifkan) fitur-fitur ",(0,s.jsx)(n.em,{children:"Package"})," ini."]}),"\n",(0,s.jsxs)(n.p,{children:["Dengan demikian, model ",(0,s.jsx)(n.code,{children:"User"})," dasar biasanya akan memiliki persyaratan minimum berikut:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"use Illuminate\\Foundation\\Auth\\User as Authenticatable;\r\nuse Spatie\\Permission\\Traits\\HasRoles;\r\n\r\nclass User extends Authenticatable\r\n{\r\n    use HasRoles;\r\n    // ...\r\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"tidak-boleh-memiliki-property-role-atau-roles-maupun-method-roles",children:["TIDAK BOLEH memiliki property ",(0,s.jsx)(n.code,{children:"role"})," atau ",(0,s.jsx)(n.code,{children:"roles"}),", maupun method ",(0,s.jsx)(n.code,{children:"roles()"})]}),"\n",(0,s.jsxs)(n.p,{children:["Model ",(0,s.jsx)(n.code,{children:"User"})," Anda ",(0,s.jsx)(n.strong,{children:"TIDAK BOLEH"})," memiliki ",(0,s.jsx)(n.em,{children:"property"})," ",(0,s.jsx)(n.code,{children:"role"})," atau ",(0,s.jsx)(n.code,{children:"roles"})," (atau field dalam database dengan nama tersebut), atau ",(0,s.jsx)(n.em,{children:"method"})," ",(0,s.jsx)(n.code,{children:"roles()"}),". Hal ini akan mengganggu ",(0,s.jsx)(n.em,{children:"property"})," dan ",(0,s.jsx)(n.em,{children:"method"})," yang ditambahkan oleh trait ",(0,s.jsx)(n.code,{children:"HasRoles"})," yang disediakan oleh ",(0,s.jsx)(n.em,{children:"package"})," ini, sehingga menyebabkan hasil yang tidak diharapkan saat ",(0,s.jsx)(n.em,{children:"method package"})," ini digunakan untuk memeriksa ",(0,s.jsx)(n.em,{children:"roles"})," dan ",(0,s.jsx)(n.em,{children:"permissions"}),"."]}),"\n",(0,s.jsxs)(n.h3,{id:"tidak-boleh-memiliki-property-permission-atau-permissions-maupun-method-permission",children:["TIDAK BOLEH memiliki property ",(0,s.jsx)(n.code,{children:"permission"})," atau ",(0,s.jsx)(n.code,{children:"permissions"}),", maupun method ",(0,s.jsx)(n.code,{children:"permission()"})]}),"\n",(0,s.jsxs)(n.p,{children:["Model ",(0,s.jsx)(n.code,{children:"User"})," Anda tidak boleh memiliki ",(0,s.jsx)(n.em,{children:"property"})," ",(0,s.jsx)(n.code,{children:"permission"})," atau ",(0,s.jsx)(n.code,{children:"permissions"})," (atau field dalam database dengan nama tersebut), atau ",(0,s.jsx)(n.em,{children:"method"})," ",(0,s.jsx)(n.code,{children:"permissions()"}),". Hal ini akan mengganggu ",(0,s.jsx)(n.em,{children:"property"})," dan ",(0,s.jsx)(n.em,{children:"method"})," yang ditambahkan oleh trait ",(0,s.jsx)(n.code,{children:"HasPermissions"})," yang disediakan oleh ",(0,s.jsx)(n.em,{children:"package"})," ini (yang ",(0,s.jsx)(n.em,{children:"invoked"})," (dipanggil) melalui trait ",(0,s.jsx)(n.code,{children:"HasRoles"}),")."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// vendor\\spatie\\laravel-permission\\src\\Traits\\HasRoles.php\r\nnamespace Spatie\\Permission\\Traits;\r\n\r\n// code lain disembunyikan\r\n\r\ntrait HasRoles\r\n{\r\n    use HasPermissions;    \r\n    // code lain disembunyikan\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"config-file",children:"Config file"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Package"})," ini akan ",(0,s.jsx)(n.em,{children:"publishes"})," file ",(0,s.jsx)(n.code,{children:"config/permission.php"}),". Jika Anda sudah memiliki file dengan nama tersebut, Anda harus mengganti nama atau menghapusnya, karena akan conflict (bentrok) dengan ",(0,s.jsx)(n.em,{children:"package"})," ini. Anda dapat secara opsional menggabungkan nilai-nilai Anda sendiri dengan yang diperlukan oleh ",(0,s.jsx)(n.em,{children:"package"})," ini, selama kunci-kunci yang diharapkan oleh ",(0,s.jsx)(n.em,{children:"package"})," ini ada. Lihat file sumber untuk lebih detail."]}),"\n",(0,s.jsx)(n.h3,{id:"schema-limitation-in-mysql",children:"Schema Limitation in MySQL"}),"\n",(0,s.jsxs)(n.p,{children:["Pada MySQL 8.0 membatasi ",(0,s.jsx)(n.em,{children:"index keys"})," menjadi 1000 ",(0,s.jsx)(n.em,{children:"characters"}),". ",(0,s.jsx)(n.em,{children:"package"})," ini ",(0,s.jsx)(n.em,{children:"publishes"})," (menerbitkan) ",(0,s.jsx)(n.em,{children:"migration"})," yang menggabungkan beberapa ",(0,s.jsx)(n.em,{children:"columns"})," dalam ",(0,s.jsx)(n.em,{children:"single index"})," (satu index). Dengan ",(0,s.jsx)(n.code,{children:"utf8mb4"}),", persyaratan ",(0,s.jsx)(n.code,{children:"4-bytes-per-character"})," dari ",(0,s.jsx)(n.code,{children:"mb4"})," berarti ",(0,s.jsx)(n.em,{children:"max length"})," (panjang maksimum) ",(0,s.jsx)(n.em,{children:"columns"})," dalam ",(0,s.jsx)(n.em,{children:"hybrid index"})," hanya dapat menjadi 125 ",(0,s.jsx)(n.em,{children:"characters"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Oleh karena itu, dalam ",(0,s.jsx)(n.code,{children:"AppServiceProvider"})," Anda perlu mengatur ",(0,s.jsx)(n.code,{children:"Schema::defaultStringLength(125)"}),". ",(0,s.jsx)(n.a,{href:"https://laravel.com/docs/migrations#index-lengths-mysql-mariadb",children:"Lihat petunjuk pada Dokumentasi Laravel"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Anda mungkin dapat mengabaikan pengaturan ",(0,s.jsx)(n.code,{children:"defaultStringLength(125)"})," dengan mengedit ",(0,s.jsx)(n.em,{children:"migration"})," dan menentukan 125 char di 4 ",(0,s.jsx)(n.em,{children:"field"}),". Ada 2 contoh potongan kode di mana Anda dapat secara eksplisit mengatur 125 char:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$table->string('name');       // For MySQL 8.0 use string('name', 125);\r\n$table->string('guard_name'); // For MySQL 8.0 use string('guard_name', 125);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"catatan-untuk-aplikasi-yang-menggunakan-uuidulidguid",children:"Catatan untuk aplikasi yang menggunakan UUID/ULID/GUID"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Package"})," ini mengharapkan ",(0,s.jsx)(n.code,{children:"primary key"})," dari model ",(0,s.jsx)(n.code,{children:"User"})," Anda untuk menjadi auto-incrementing ",(0,s.jsx)(n.code,{children:"int"})," (yang bertambah secara otomatis). Jika tidak, Anda mungkin perlu memodifikasi ",(0,s.jsx)(n.em,{children:"migration"})," ",(0,s.jsx)(n.code,{children:"create_permission_tables"})," dan/atau mengubah konfigurasi default. Lihat ",(0,s.jsx)(n.a,{href:"https://spatie.be/docs/laravel-permission/advanced-usage/uuid",children:"https://spatie.be/docs/laravel-permission/advanced-usage/uuid"})," untuk informasi lebih lanjut."]}),"\n",(0,s.jsx)(n.h3,{id:"database-foreign-key-relationship-support",children:"Database foreign-key relationship support"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Package"})," ini menggunakan ",(0,s.jsx)(n.code,{children:"relationship foreign-key"})," pada database dengan ",(0,s.jsx)(n.code,{children:"cascading deletes"})," untuk menerapkan integritas database. Hal ini mencegah situasi ketidaksesuaian data jika records database dimanipulasi di luar ",(0,s.jsx)(n.em,{children:"package"})," ini. Jika database engine Anda tidak mendukung relationship foreign-key, maka Anda harus mengubah file ",(0,s.jsx)(n.em,{children:"migration"})," sesuai dengan kebutuhan."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Package"})," ini melakukan ",(0,s.jsx)(n.code,{children:"detaching"})," terpisah dari ",(0,s.jsx)(n.code,{children:"pivot records"})," saat penghapusan dilakukan menggunakan ",(0,s.jsx)(n.em,{children:"method"})," yang disediakan oleh ",(0,s.jsx)(n.em,{children:"package"})," ini. Jadi, jika database Anda tidak mendukung foreign key, selama Anda hanya menggunakan panggilan ",(0,s.jsx)(n.em,{children:"method"})," yang disediakan oleh ",(0,s.jsx)(n.em,{children:"package"})," ini untuk mengelola records terkait, seharusnya tidak ada masalah integritas data."]}),"\n",(0,s.jsx)(n.h2,{id:"installation-in-laravel",children:"Installation in Laravel"}),"\n",(0,s.jsx)(n.h3,{id:"laravel-version-compatibility",children:"Laravel Version Compatibility"}),"\n",(0,s.jsxs)(n.p,{children:["Lihat pada ",(0,s.jsx)(n.a,{href:"https://spatie.be/docs/laravel-permission/v6/installation-laravel#content-laravel-version-compatibility",children:"Laravel Version Compatibility"})]}),"\n",(0,s.jsx)(n.h3,{id:"installing",children:"Installing"}),"\n",(0,s.jsxs)(n.p,{children:["Ini adalah instruksi untuk install ",(0,s.jsx)(n.em,{children:"package"})," Spatie Laravel Permission. Beberapa hal yang perlu diperhatikan sebelum instalasi adalah:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Pastikan untuk memeriksa [Prerequisites] page untuk pertimbangan penting mengenai model ",(0,s.jsx)(n.code,{children:"User"})," Anda!"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.em,{children:"Package"})," ini akan ",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"publishes"})})," file ",(0,s.jsx)(n.code,{children:"config/permission.php"}),". Jika Anda sudah memiliki file dengan nama tersebut, Anda harus mengubah nama atau menghapusnya."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Langkah-langkah untuk install ",(0,s.jsx)(n.em,{children:"package"})," ini adalah sebagai berikut:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Install ",(0,s.jsx)(n.em,{children:"package"})," melalui Composer"]})," dengan perintah:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"composer require spatie/laravel-permission\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["Optional: ",(0,s.jsx)(n.em,{children:"package"})," ini akan mendaftarkan service provider secara otomatis. Atau Anda dapat menambahkan service provider secara manual di file ",(0,s.jsx)(n.code,{children:"config/app.php"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"'providers' => [\r\n	// ...     \r\n	Spatie\\Permission\\PermissionServiceProvider::class, \r\n];\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsxs)(n.em,{children:["Publish ",(0,s.jsx)(n.a,{href:"https://github.com/spatie/laravel-permission/blob/main/database/migrations/create_permission_tables.php.stub",children:"migration"})]})})," dan ",(0,s.jsx)(n.a,{href:"https://github.com/spatie/laravel-permission/blob/main/config/permission.php",children:(0,s.jsx)(n.em,{children:"config file"})})," ",(0,s.jsx)(n.code,{children:"config/permission.php"})," dengan perintah:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'php artisan vendor:publish --provider="Spatie\\Permission\\PermissionServiceProvider"\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["SEBELUM MENJALANKAN ",(0,s.jsx)(n.em,{children:"migration"})]})}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Jika Anda menggunakan UUID"}),", lihat bagian Advanced pada dokumen tentang langkah-langkah UUID sebelum melanjutkan. Hal ini menjelaskan beberapa perubahan yang mungkin ingin Anda buat pada ",(0,s.jsx)(n.em,{children:"migration"})," dan ",(0,s.jsx)(n.em,{children:"config file"})," sebelum melanjutkan."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Jika Anda akan menggunakan fitur TEAMS"}),", Anda harus memperbarui ",(0,s.jsx)(n.a,{href:"https://github.com/spatie/laravel-permission/blob/main/config/permission.php",children:(0,s.jsx)(n.em,{children:"config file"})})," ",(0,s.jsx)(n.code,{children:"config/permission.php"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Anda harus mengatur ",(0,s.jsx)(n.code,{children:"'teams' => true"}),","]}),"\n",(0,s.jsxs)(n.li,{children:["dan (opsional) Anda dapat mengatur nama ",(0,s.jsx)(n.code,{children:"team_foreign_key"})," di ",(0,s.jsx)(n.em,{children:"config file"})," jika Anda ingin menggunakan foreign key kustom di database Anda untuk tim."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Jika Anda menggunakan MySQL 8"}),", lihat file ",(0,s.jsx)(n.em,{children:"migration"})," untuk catatan tentang MySQL 8 untuk mengatur/membatasi panjang ",(0,s.jsx)(n.code,{children:"index key"}),", dan edit sesuai kebutuhan. Jika Anda mendapatkan ",(0,s.jsx)(n.code,{children:"ERROR: 1071 Specified key was too long"})," maka Anda perlu melakukan ini."]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Bersihkan cache konfigurasi Anda"}),". ",(0,s.jsx)(n.em,{children:"Package"})," ini memerlukan akses ke pengaturan konfigurasi ",(0,s.jsx)(n.code,{children:"permission"})," agar dapat menjalankan ",(0,s.jsx)(n.em,{children:"migration"}),". Jika Anda telah mem-cache konfigurasi secara lokal, bersihkan cache konfigurasi Anda dengan salah satu dari perintah berikut:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"php artisan optimize:clear\n"})}),"\n",(0,s.jsx)(n.p,{children:"atau"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"php artisan config:clear\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Jalankan ",(0,s.jsx)(n.em,{children:"migration"})]}),": Setelah konfigurasi telah dipublikasikan dan dikonfigurasi, Anda dapat membuat tabel untuk ",(0,s.jsx)(n.em,{children:"package"})," ini dengan menjalankan ",(0,s.jsx)(n.em,{children:"migration"}),", dengan perintah:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"php artisan migrate\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"6",children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Tambahkan trait yang diperlukan ke model ",(0,s.jsx)(n.code,{children:"User"})," Anda"]}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"use Illuminate\\Foundation\\Auth\\User as Authenticatable;\r\nuse Spatie\\Permission\\Traits\\HasRoles;\r\n\r\nclass User extends Authenticatable\r\n{\r\n    use HasRoles;\r\n    // ...\r\n}\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"7",children:["\n",(0,s.jsxs)(n.li,{children:["Anda dapat mulai menggunakan fitur-fitur ",(0,s.jsx)(n.em,{children:"package"})," ini dengan membaca bagian Basic Usage pada dokumentasinya."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"default-config-file-contents",children:"Default config file contents"}),"\n",(0,s.jsxs)(n.p,{children:["Anda dapat melihat isi ",(0,s.jsx)(n.code,{children:"config file"})," default di:\r\n",(0,s.jsx)(n.a,{href:"https://github.com/spatie/laravel-permission/blob/main/config/permission.php",children:"https://github.com/spatie/laravel-permission/blob/main/config/permission.php"})]}),"\n",(0,s.jsx)(n.h3,{id:"membuat-seeder",children:"Membuat Seeder"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"php artisan make:seeder RoleSeeder\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"php artisan make:seeder PermissionSeeder\n"})}),"\n",(0,s.jsx)(n.h2,{id:"basic-usage-penggunaan-dasar",children:"Basic Usage (Penggunaan Dasar)"}),"\n",(0,s.jsx)(n.p,{children:"Ini adalah petunjuk dasar penggunaan Spatie Laravel Permission. Berikut adalah penjelasan dari setiap langkah:"}),"\n",(0,s.jsx)(n.h3,{id:"add-the-trait",children:"Add The Trait"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Menambahkan Trait"}),": Pertama, Anda perlu menambahkan trait ",(0,s.jsx)(n.code,{children:"Spatie\\Permission\\Traits\\HasRoles"})," ke model ",(0,s.jsx)(n.code,{children:"User"})," Anda. Dengan menambahkan trait ini, model ",(0,s.jsx)(n.code,{children:"User"})," akan memiliki kemampuan untuk memiliki ",(0,s.jsx)(n.code,{children:"roles"})," dan ",(0,s.jsx)(n.code,{children:"permissions"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"use Illuminate\\Foundation\\Auth\\User as Authenticatable;\r\nuse Spatie\\Permission\\Traits\\HasRoles;\r\n\r\nclass User extends Authenticatable\r\n{\r\n    use HasRoles;\r\n    // ...\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"create-a-permission",children:"Create A Permission"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Membuat ",(0,s.jsx)(n.code,{children:"permissions"})]}),": ",(0,s.jsx)(n.em,{children:"Package"})," ini memungkinkan ",(0,s.jsx)(n.em,{children:"user"})," untuk berelasi dengan ",(0,s.jsx)(n.code,{children:"permissions"})," dan ",(0,s.jsx)(n.code,{children:"roles"}),". Setiap ",(0,s.jsx)(n.code,{children:"role"})," berelasi dengan beberapa ",(0,s.jsx)(n.code,{children:"permissions"}),". ",(0,s.jsx)(n.code,{children:"Role"})," dan ",(0,s.jsx)(n.code,{children:"Permission"})," adalah model Eloquent biasa. Mereka ",(0,s.jsx)(n.em,{children:"require"})," ",(0,s.jsx)(n.code,{children:"name"})," dan dapat dibuat seperti ini:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"use Spatie\\Permission\\Models\\Role;\r\nuse Spatie\\Permission\\Models\\Permission;\r\n\r\n$role = Role::create(['name' => 'writer']);\r\n$permission = Permission::create(['name' => 'edit articles']);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"assign-a-permission-to-a-role",children:"Assign A Permission To A Role"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Menetapkan ",(0,s.jsx)(n.code,{children:"permission"})," ke ",(0,s.jsx)(n.code,{children:"role"})]}),": ",(0,s.jsx)(n.code,{children:"permission"})," dapat ditetapkan (assign) ke ",(0,s.jsx)(n.code,{children:"role"})," menggunakan salah satu dari ",(0,s.jsx)(n.em,{children:"method"})," berikut:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$role->givePermissionTo($permission); // peran diberi izin untuk ...\r\n$permission->assignRole($role); // ijin ini ditetapkan ke peran ...\n"})}),"\n",(0,s.jsx)(n.h3,{id:"sync-permissions-to-a-role",children:"Sync Permissions To A Role"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Menyinkronkan ",(0,s.jsx)(n.code,{children:"permission"})," ke ",(0,s.jsx)(n.code,{children:"role"})]}),": Beberapa ",(0,s.jsx)(n.code,{children:"permissions"})," dapat disinkronkan ke ",(0,s.jsx)(n.code,{children:"role"})," menggunakan salah satu dari ",(0,s.jsx)(n.em,{children:"method"})," berikut:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$role->syncPermissions($permissions);\r\n$permission->syncRoles($roles);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"remove-permission-from-a-role",children:"Remove Permission From A Role"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Menghapus ",(0,s.jsx)(n.code,{children:"permission"})," dari ",(0,s.jsx)(n.code,{children:"role"})]}),": ",(0,s.jsx)(n.code,{children:"permission"})," dapat dihapus dari ",(0,s.jsx)(n.code,{children:"role"})," menggunakan salah satu dari ",(0,s.jsx)(n.em,{children:"method"})," berikut:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$role->revokePermissionTo($permission);\r\n$permission->removeRole($role);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"guard-name",children:"Guard Name"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Nama Penjaga"}),": Jika Anda menggunakan beberapa penjaga (guards), maka atribut ",(0,s.jsx)(n.code,{children:"guard_name"})," juga harus diatur. Anda dapat membaca tentang ini di bagian ",(0,s.jsx)(n.a,{href:"https://spatie.be/docs/laravel-permission/v6/basic-usage/multiple-guards",children:"using multiple guards"})," dari readme."]}),"\n",(0,s.jsx)(n.h3,{id:"get-permissions-for-a-user",children:"Get Permissions For A User"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Mendapatkan ",(0,s.jsx)(n.code,{children:"permissions"})," untuk ",(0,s.jsx)(n.code,{children:"User"})]}),": Trait ",(0,s.jsx)(n.code,{children:"HasRoles"})," menambahkan relasi Eloquent ke model Anda, yang dapat diakses secara langsung atau digunakan sebagai ",(0,s.jsx)(n.em,{children:"query"})," dasar."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// get a list of all permissions directly assigned to the user\r\n$permissionNames = $user->getPermissionNames(); // collection of name strings\r\n$permissions = $user->permissions; // collection of permission objects\r\n\r\n// get all permissions for the user, either directly, or from roles, or from both\r\n$permissions = $user->getDirectPermissions();\r\n$permissions = $user->getPermissionsViaRoles();\r\n$permissions = $user->getAllPermissions();\r\n\r\n// get the names of the user's roles\r\n$roles = $user->getRoleNames(); // Returns a collection\n"})}),"\n",(0,s.jsx)(n.h3,{id:"scopes",children:"Scopes"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Cakupan"}),": Trait ",(0,s.jsx)(n.code,{children:"HasRoles"})," juga menambahkan cakupan ",(0,s.jsx)(n.code,{children:"role"})," dan ",(0,s.jsx)(n.code,{children:"withoutRole"})," ke model Anda untuk membatasi ",(0,s.jsx)(n.em,{children:"query"})," ke ",(0,s.jsx)(n.code,{children:"roles"})," atau ",(0,s.jsx)(n.code,{children:"permissions"})," tertentu."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$writerUsers = User::role('writer')->get(); // Returns only users with the role 'writer'\r\n$nonEditorUsers = User::withoutRole('editor')->get(); // Returns only users without the role 'editor'\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Cakupan ",(0,s.jsx)(n.code,{children:"role"})," dan ",(0,s.jsx)(n.code,{children:"withoutRole"})," dapat menerima ",(0,s.jsx)(n.code,{children:"string"}),", object ",(0,s.jsx)(n.code,{children:"\\Spatie\\Permission\\Models\\Role"}),", atau object ",(0,s.jsx)(n.code,{children:"\\Illuminate\\Support\\Collection"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Trait yang sama juga menambahkan cakupan hanya untuk get users yang memiliki atau tidak memiliki ",(0,s.jsx)(n.code,{children:"permissions"})," tertentu."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$users = User::permission('edit articles')->get(); // Returns only users with the permission 'edit articles' (inherited or directly)\r\n$usersWhoCannotEditArticles = User::withoutPermission('edit articles')->get(); // Returns all users without the permission 'edit articles' (inherited or directly)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The scope can accept a string, a\xa0",(0,s.jsx)(n.code,{children:"\\Spatie\\Permission\\Models\\Permission"}),"\xa0object or an\xa0",(0,s.jsx)(n.code,{children:"\\Illuminate\\Support\\Collection"}),"\xa0object."]}),"\n",(0,s.jsx)(n.h3,{id:"eloquent-calls",children:"Eloquent Calls"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Panggilan Eloquent"}),": Karena model ",(0,s.jsx)(n.code,{children:"Role"})," dan ",(0,s.jsx)(n.code,{children:"Permission"})," extended dari model Eloquent, Eloquent Calls dasar juga dapat digunakan."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$all_users_with_all_their_roles = User::with('roles')->get();\r\n$all_users_with_all_their_direct_permissions = User::with('permissions')->get();\r\n$all_roles_in_database = Role::all()->pluck('name');\r\n$users_without_any_roles = User::doesntHave('roles')->get();\r\n$all_roles_except_a_and_b = Role::whereNotIn('name', ['role A', 'role B'])->get();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"counting-users-having-a-role",children:"Counting Users Having A Role"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Menghitung ",(0,s.jsx)(n.code,{children:"User"})," yang Memiliki ",(0,s.jsx)(n.code,{children:"roles"})]}),": Salah satu cara untuk menghitung semua ",(0,s.jsx)(n.em,{children:"user"})," yang memiliki suatu ",(0,s.jsx)(n.code,{children:"roles"})," adalah dengan menyaring collection semua ",(0,s.jsx)(n.em,{children:"user"})," dengan ",(0,s.jsx)(n.code,{children:"roles"})," mereka:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$superAdminCount = User::with('roles')->get()->filter(\r\n    fn ($user) => $user->roles->where('name', 'Super Admin')->toArray()\r\n)->count();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"best-practice",children:"Best-Practice"}),"\n",(0,s.jsx)(n.h3,{id:"roles-vs-permissions",children:"Roles vs Permissions"}),"\n",(0,s.jsx)(n.p,{children:"Ini adalah panduan praktik terbaik untuk memahami perbedaan antara Peran (Roles) dan Izin (Permissions):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Peran (Roles)"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Role"})," adalah sekelompok ",(0,s.jsx)(n.code,{children:"Permission"})," yang diberikan kepada ",(0,s.jsx)(n.code,{children:"User"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:['Mereka digunakan untuk "mengelompokkan" ',(0,s.jsx)(n.code,{children:"User"}),' berdasarkan "set ',(0,s.jsx)(n.code,{children:"Permission"}),'" tertentu.']}),"\n",(0,s.jsxs)(n.li,{children:["Ini memberikan gambaran umum tentang apa yang dapat dilakukan oleh sekelompok ",(0,s.jsx)(n.code,{children:"User"})," tertentu."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Izin (Permissions)"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Permission"})," adalah hak akses yang spesifik untuk fitur atau tindakan (action) tertentu."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Permission"})," ",(0,s.jsx)(n.strong,{children:"sebaiknya"})," ditetapkan ke ",(0,s.jsx)(n.code,{children:"Role"}),", ",(0,s.jsx)(n.strong,{children:'"bukan langsung"'})," ke ",(0,s.jsx)(n.code,{children:"User"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Semakin terperinci dan deskriptif ",(0,s.jsx)(n.code,{children:"name"})," ",(0,s.jsx)(n.code,{children:"Permission"})," (izin seperti ",(0,s.jsx)(n.code,{children:"view document"})," dan ",(0,s.jsx)(n.code,{children:"edit document"})," ), semakin mudah mengontrol akses dalam aplikasi."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pengguna (Users)"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"User"})," ",(0,s.jsx)(n.strong,{children:"sebaiknya jangan diberikan"})," ",(0,s.jsx)(n.code,{children:"Permission"})," secara langsung."]}),"\n",(0,s.jsxs)(n.li,{children:["Lebih baik jika ",(0,s.jsx)(n.code,{children:"User"})," mewarisi ",(0,s.jsx)(n.code,{children:"Permission"})," melalui ",(0,s.jsx)(n.code,{children:"Role"})," yang ditetapkan kepada mereka."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Penggunaan ",(0,s.jsx)(n.code,{children:"@can"})," atau ",(0,s.jsx)(n.code,{children:"can()"})," Directive"]}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Selalu gunakan directive blade ",(0,s.jsx)(n.code,{children:"@can"})," dan ",(0,s.jsx)(n.code,{children:"can()"}),"  bawaan Laravel"]}),", dengan begitu Anda dapat memeriksa ",(0,s.jsx)(n.code,{children:"User Permission"})," di seluruh aplikasi."]}),"\n",(0,s.jsxs)(n.li,{children:["Ini memungkinkan layer ",(0,s.jsx)(n.code,{children:"Gate"})," Laravel untuk menangani sebagian besar pekerjaan beratnya."]}),"\n",(0,s.jsxs)(n.li,{children:["Menguji ",(0,s.jsx)(n.code,{children:"Permission"})," secara langsung dengan ",(0,s.jsx)(n.code,{children:"@can"})," dan ",(0,s.jsx)(n.code,{children:"can()"})," lebih aman daripada menguji ",(0,s.jsx)(n.code,{children:"Role"})," langsung dengan ",(0,s.jsx)(n.code,{children:"$user->hasRole('Role')"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Lebih Aman untuk Menggunakan Permission Daripada Role"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Lebih aman jika tampilan (Views) Anda memeriksa ",(0,s.jsx)(n.em,{children:"permission"})," khusus seperti ",(0,s.jsx)(n.code,{children:"@can('view member addresses')"})," atau ",(0,s.jsx)(n.code,{children:"@can('edit document')"}),", bukan menguji langsung ",(0,s.jsx)(n.em,{children:"role user"})," dengan ",(0,s.jsx)(n.code,{children:"$user->hasRole('Editor')"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Ini karena memeriksa ",(0,s.jsx)(n.em,{children:"permission"})," memberi tingkat kontrol yang lebih spesifik."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Kontrol Tampilan Konten vs Tombol Edit/Hapus"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Dengan menggunakan ",(0,s.jsx)(n.em,{children:"permission"}),' terpisah seperti "',(0,s.jsx)(n.code,{children:"view document"}),'" dan "',(0,s.jsx)(n.code,{children:"edit document"}),'", Anda dapat lebih mudah mengontrol bagaimana konten ditampilkan dan tombol edit/hapus diperlihatkan.']}),"\n",(0,s.jsxs)(n.li,{children:["Misalnya, jika sebuah user memiliki ",(0,s.jsx)(n.em,{children:"permission"}),' "view document" tetapi tidak "edit document", Anda dapat menampilkan konten dokumen tersebut tetapi tidak menampilkan tombol untuk mengedit atau menghapus dokumen tersebut.']}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.em,{children:"Role"})," Penulis"]}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Dalam contoh tersebut, ",(0,s.jsx)(n.em,{children:"role"}),' "Penulis" (Writer) akan diberikan kedua ',(0,s.jsx)(n.em,{children:"permission"}),' "view" dan "edit".']}),"\n",(0,s.jsxs)(n.li,{children:["Ini berarti ",(0,s.jsx)(n.em,{children:"user"})," yang memiliki ",(0,s.jsx)(n.em,{children:"role"}),' "Penulis" akan memiliki kemampuan untuk melihat dan mengedit dokumen.']}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["User Mendapatkan ",(0,s.jsx)(n.em,{children:"role"})," Penulis"]}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Kemudian, ",(0,s.jsx)(n.em,{children:"user"})," akan diberikan ",(0,s.jsx)(n.em,{children:"role"}),' "Penulis" (Writer), yang berarti mereka akan mewarisi ',(0,s.jsx)(n.em,{children:"permission"}),' "view" dan "edit" yang terkait dengan ',(0,s.jsx)(n.em,{children:"role"})," tersebut."]}),"\n",(0,s.jsxs)(n.li,{children:["Dengan cara ini, Anda dapat mengatur ",(0,s.jsx)(n.em,{children:"permission"})," dengan lebih fleksibel, di mana ",(0,s.jsx)(n.em,{children:"user"})," dapat diberikan ",(0,s.jsx)(n.em,{children:"role"})," yang sesuai dengan tugas atau tanggung jawab mereka dalam aplikasi."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ringkasan"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"users"})," memiliki ",(0,s.jsx)(n.code,{children:"Roles"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"roles"})," memiliki ",(0,s.jsx)(n.code,{children:"Permissions"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Aplikasi selalu memeriksa izin (sebanyak mungkin), bukan ",(0,s.jsx)(n.code,{children:"roles"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"views"})," check ",(0,s.jsx)(n.code,{children:"permission-names"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"policies"})," (kebijakan) check ",(0,s.jsx)(n.code,{children:"permission-names"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"model policies"})," check ",(0,s.jsx)(n.code,{children:"permission-names"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"controller methods"})," check ",(0,s.jsx)(n.code,{children:"permission-names"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"middleware"})," check ",(0,s.jsx)(n.code,{children:"permission-names"}),", atau kadang-kadang ",(0,s.jsx)(n.code,{children:"role-names"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"routes"})," check ",(0,s.jsx)(n.code,{children:"permission-names"}),", atau mungkin ",(0,s.jsx)(n.code,{children:"role-names"})," jika Anda perlu membuat kode seperti itu."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Terkadang kelompok aturan ",(0,s.jsx)(n.code,{children:"route"})," tertentu mungkin lebih masuk akal untuk mengelompokkannya berdasarkan ",(0,s.jsx)(n.code,{children:"role"}),", namun tetap saja, jika memungkinkan, biaya overhead yang digunakan akan lebih sedikit jika Anda dapat memeriksa ",(0,s.jsx)(n.code,{children:"permission"})," tertentu."]}),"\n",(0,s.jsx)(n.h2,{id:"membuat-policy-role-dan-permission",children:"Membuat Policy Role dan Permission"}),"\n",(0,s.jsx)(n.h3,{id:"role",children:"Role"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"php artisan make:policy RolePolicy --model=Role\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",metastring:'title="app\\Policies\\RolePolicy.php"',children:"<?php\r\n\r\nnamespace App\\Policies;\r\n\r\nuse App\\Models\\User;\r\nuse Illuminate\\Auth\\Access\\Response;\r\nuse Spatie\\Permission\\Models\\Role;\r\n\r\nclass RolePolicy\r\n{\r\n    /**\r\n     * Determine whether the user can view any models.\r\n     */\r\n    public function viewAny(User $user): bool\r\n    {\r\n        return $user->isSuperAdmin();\r\n    }\r\n\r\n    /**\r\n     * Determine whether the user can view the model.\r\n     */\r\n    public function view(User $user, Role $role): bool\r\n    {\r\n        return $user->isSuperAdmin();\r\n    }\r\n\r\n    /**\r\n     * Determine whether the user can create models.\r\n     */\r\n    public function create(User $user): bool\r\n    {\r\n        return $user->isSuperAdmin();\r\n    }\r\n\r\n    /**\r\n     * Determine whether the user can update the model.\r\n     */\r\n    public function update(User $user, Role $role): bool\r\n    {\r\n        return $user->isSuperAdmin();\r\n    }\r\n\r\n    /**\r\n     * Determine whether the user can delete the model.\r\n     */\r\n    public function delete(User $user, Role $role): bool\r\n    {\r\n        return $user->isSuperAdmin();\r\n    }\r\n\r\n    /**\r\n     * Determine whether the user can restore the model.\r\n     */\r\n    public function restore(User $user, Role $role): bool\r\n    {\r\n        return $user->isSuperAdmin();\r\n    }\r\n\r\n    /**\r\n     * Determine whether the user can permanently delete the model.\r\n     */\r\n    public function forceDelete(User $user, Role $role): bool\r\n    {\r\n        return $user->isSuperAdmin();\r\n    }\r\n}\r\n\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"permission",children:"Permission"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"php artisan make:policy PermissionPolicy --model=Permission\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",metastring:'title="app\\Policies\\PermissionPolicy.php"',children:"<?php\r\n\r\nnamespace App\\Policies;\r\n\r\nuse App\\Models\\User;\r\nuse Illuminate\\Auth\\Access\\Response;\r\nuse Spatie\\Permission\\Models\\Permission;\r\n\r\nclass PermissionPolicy\r\n{\r\n    /**\r\n     * Determine whether the user can view any models.\r\n     */\r\n    public function viewAny(User $user): bool\r\n    {\r\n        return $user->isSuperAdmin();\r\n    }\r\n\r\n    /**\r\n     * Determine whether the user can view the model.\r\n     */\r\n    public function view(User $user, Permission $permission): bool\r\n    {\r\n        return $user->isSuperAdmin();\r\n    }\r\n\r\n    /**\r\n     * Determine whether the user can create models.\r\n     */\r\n    public function create(User $user): bool\r\n    {\r\n        return $user->isSuperAdmin();\r\n    }\r\n\r\n    /**\r\n     * Determine whether the user can update the model.\r\n     */\r\n    public function update(User $user, Permission $permission): bool\r\n    {\r\n        return $user->isSuperAdmin();\r\n    }\r\n\r\n    /**\r\n     * Determine whether the user can delete the model.\r\n     */\r\n    public function delete(User $user, Permission $permission): bool\r\n    {\r\n        return $user->isSuperAdmin();\r\n    }\r\n\r\n    /**\r\n     * Determine whether the user can restore the model.\r\n     */\r\n    public function restore(User $user, Permission $permission): bool\r\n    {\r\n        return $user->isSuperAdmin();\r\n    }\r\n\r\n    /**\r\n     * Determine whether the user can permanently delete the model.\r\n     */\r\n    public function forceDelete(User $user, Permission $permission): bool\r\n    {\r\n        return $user->isSuperAdmin();\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"authserviceprovider",children:"AuthServiceProvider"}),"\n",(0,s.jsxs)(n.p,{children:["Tambahkan pengaturan ",(0,s.jsx)(n.code,{children:"$policies"})," pada ",(0,s.jsx)(n.code,{children:"AuthServiceProvider.php"})," supaya terhubung antara ",(0,s.jsx)(n.code,{children:"RolePolicy.php"})," dengan model yang ada pada spatie ",(0,s.jsx)(n.code,{children:"Role.php"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",metastring:'title="app\\Providers\\AuthServiceProvider.php"',children:'<?php\r\n\r\nnamespace App\\Providers;\r\n\r\nuse App\\Models\\User;\r\nuse Illuminate\\Support\\Facades\\Gate;\r\nuse Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider as ServiceProvider;\r\n\r\nclass AuthServiceProvider extends ServiceProvider\r\n{\r\n    /**\r\n     * The model to policy mappings for the application.\r\n     *\r\n     * @var array<class-string, class-string>\r\n     */\r\n    protected $policies = [\r\n        \\Spatie\\Permission\\Models\\Role::class => \\App\\Policies\\RolePolicy::class,\r\n        \\Spatie\\Permission\\Models\\Permission::class => \\App\\Policies\\PermissionPolicy::class,\r\n    ];\r\n\r\n    /**\r\n     * Register any authentication / authorization services.\r\n     */\r\n    public function boot(): void\r\n    {\r\n	    // Harus ada trait HasSuperAdmin pada model User.php (package terpisah)\r\n        Gate::before(function (User $user, string $ability) {\r\n            return $user->isSuperAdmin() ? true : null;\r\n        });\r\n        \r\n        // Melakukan logging perintah query ke database\r\n        // storage\\logs\\laravel.log\r\n        DB::listen(function ($query) {\r\n            Log::info("Query : {$query->sql}");\r\n        });\r\n    }\r\n}\n'})})]})}function h(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},50065:function(e,n,i){i.d(n,{Z:function(){return d},a:function(){return l}});var a=i(67294);let s={},r=a.createContext(s);function l(e){let n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);